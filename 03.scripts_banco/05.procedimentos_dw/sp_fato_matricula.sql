CREATE OR ALTER PROCEDURE SP_FATO_MATRICULA (@DATA_CARGA DATETIME)
AS
BEGIN
	DECLARE @COD_MATRICULA INT, @COD_CLIENTE INT, @COD_UNIDADE INT, @COD_MODALIDADE INT, 
			@COD_PLANO INT, @DATA_MATRICULA DATE, @DATA_VENCIMENTO DATE

	DECLARE @ID_CLIENTE INT, @ID_UNIDADE INT, @ID_MODALIDADE INT, @ID_PLANO INT, 
			@ID_MATRICULA BIGINT, @ID_VENCIMENTO BIGINT

	DECLARE C_MATRICULA CURSOR FOR 
	SELECT COD_MATRICULA, COD_CLIENTE, COD_UNIDADE, COD_MODALIDADE, COD_PLANO, DATA_MATRICULA, DATA_VENCIMENTO
	FROM TB_AUX_MATRICULA
	WHERE DATA_CARGA = @DATA_CARGA

	OPEN C_MATRICULA
	FETCH C_MATRICULA INTO	@COD_MATRICULA, @COD_CLIENTE, @COD_UNIDADE, @COD_MODALIDADE, 
							@COD_PLANO, @DATA_MATRICULA, @DATA_VENCIMENTO
	WHILE(@@FETCH_STATUS = 0)
	BEGIN
		SET @ID_CLIENTE = (SELECT ID_CLIENTE
		FROM DIM_CLIENTE
		WHERE @COD_CLIENTE = COD_CLIENTE)

		SET @ID_UNIDADE = (SELECT ID_UNIDADE 
		FROM DIM_UNIDADE
		WHERE @COD_UNIDADE = COD_UNIDADE)

		SET @ID_MODALIDADE = (SELECT ID_MODALIDADE
		FROM DIM_MODALIDADE
		WHERE @COD_MODALIDADE = COD_MODALIDADE)

		SET @ID_PLANO = (SELECT ID_PLANO
		FROM DIM_PLANO
		WHERE @COD_PLANO = COD_PLANO AND FL_CORRENTE = 'SIM')

		SET @ID_MATRICULA = (SELECT ID_TEMPO
		FROM DIM_TEMPO
		WHERE @DATA_MATRICULA = DATA)

		SET @ID_VENCIMENTO = (SELECT ID_TEMPO
		FROM DIM_TEMPO
		WHERE @DATA_VENCIMENTO = DATA)

		IF (@ID_CLIENTE IS NULL) 
		BEGIN
			INSERT INTO TB_VIO_MATRICULA
			VALUES (@DATA_CARGA, @COD_MATRICULA, @DATA_MATRICULA, @COD_MODALIDADE, @COD_CLIENTE, @COD_PLANO, @COD_UNIDADE, @DATA_VENCIMENTO, getdate(), 'Id cliente não existe')
		END 
		ELSE IF (@ID_UNIDADE IS NULL) 
		BEGIN
			INSERT INTO TB_VIO_MATRICULA
			VALUES (@DATA_CARGA, @COD_MATRICULA, @DATA_MATRICULA, @COD_MODALIDADE, @COD_CLIENTE, @COD_PLANO, @COD_UNIDADE, @DATA_VENCIMENTO, getdate(), 'Id unidade não existe')
		END 
		ELSE IF (@ID_MODALIDADE IS NULL) 
		BEGIN
			INSERT INTO TB_VIO_MATRICULA
			VALUES (@DATA_CARGA, @COD_MATRICULA, @DATA_MATRICULA, @COD_MODALIDADE, @COD_CLIENTE, @COD_PLANO, @COD_UNIDADE, @DATA_VENCIMENTO, getdate(), 'Id modalidade não existe')
		END 
		ELSE IF (@ID_PLANO IS NULL) 
		BEGIN
			INSERT INTO TB_VIO_MATRICULA
			VALUES (@DATA_CARGA, @COD_MATRICULA, @DATA_MATRICULA, @COD_MODALIDADE, @COD_CLIENTE, @COD_PLANO, @COD_UNIDADE, @DATA_VENCIMENTO, getdate(), 'Id plano não existe')
		END 
		ELSE IF (@ID_MATRICULA IS NULL) 
		BEGIN
			INSERT INTO TB_VIO_MATRICULA
			VALUES (@DATA_CARGA, @COD_MATRICULA, @DATA_MATRICULA, @COD_MODALIDADE, @COD_CLIENTE, @COD_PLANO, @COD_UNIDADE, @DATA_VENCIMENTO, getdate(), 'Id data de matricula não existe')
		END 
		ELSE IF (@ID_VENCIMENTO <= 0 ) 
		BEGIN
			INSERT INTO TB_VIO_MATRICULA
			VALUES (@DATA_CARGA, @COD_MATRICULA, @DATA_MATRICULA, @COD_MODALIDADE, @COD_CLIENTE, @COD_PLANO, @COD_UNIDADE, @DATA_VENCIMENTO, getdate(), 'Id data de vencimento não existe')
		END 
		
		ELSE
		BEGIN
			IF EXISTS (SELECT * FROM FATO_MATRICULA WHERE COD_MATRICULA = @COD_MATRICULA)
			BEGIN
				UPDATE FATO_MATRICULA
				SET CLIENTE_ID = @ID_CLIENTE,
					UNIDADE_ID = @ID_UNIDADE,
					MODALIDADE_ID = @ID_MODALIDADE,
					PLANO_ID = @ID_PLANO,
					DATA_MATRICULA = @ID_MATRICULA, 
					DATA_VENCIMENTO = @ID_VENCIMENTO
				WHERE COD_MATRICULA = @COD_MATRICULA
			END
			ELSE
			BEGIN
				INSERT INTO FATO_MATRICULA
				VALUES(@COD_MATRICULA, 1, @ID_CLIENTE, @ID_UNIDADE, @ID_MODALIDADE, @ID_PLANO, @ID_MATRICULA, @ID_VENCIMENTO) 
			END
		END
		FETCH C_MATRICULA INTO	@COD_MATRICULA, @COD_CLIENTE, @COD_UNIDADE, @COD_MODALIDADE, 
								@COD_PLANO, @DATA_MATRICULA, @DATA_VENCIMENTO
	END
	CLOSE C_MATRICULA
	DEALLOCATE C_MATRICULA
END


-- Teste

EXEC SP_FATO_MATRICULA '20240316'

SELECT * FROM TB_MATRICULA
SELECT * FROM TB_AUX_MATRICULA
SELECT * FROM FATO_MATRICULA

SELECT * FROM DIM_PLANO
SELECT * FROM DIM_UNIDADE
SELECT * FROM FATO_PAGAMENTO
